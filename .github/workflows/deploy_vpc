name: Terraform Deploy the VPC

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'eu-north-1'
        type: choice
        options:
          - eu-north-1
          - eu-central-1
      environment:
        description: 'Environment'
        required: true
        default: 'qa'
        type: choice
        options:
          - dev
          - prod
          - qa
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-central-1
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.3.7

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Initialize Terraform
      run: terraform init # -backend-config="bucket=${{ secrets.TF_VAR_STATE_BUCKET }}"
      working-directory: ./terraform/aws/vpc

    - name: Validate Terraform
      run: terraform validate
      working-directory: ./terraform/aws/vpc

    - name: Plan Terraform
      run: terraform plan -var-file=${{ github.event.inputs.environment }}.tfvars -out=tfplan
      working-directory: ./terraform/aws/vpc

      
  terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: terraform-approval  # ðŸ‘ˆ Requires manual approval
    steps:
      # - name: Checkout Repository
      #   uses: actions/checkout@v3

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v2

      - name: Apply Terraform
        # run: terraform apply -auto-approve tfplan
        run: echo "Manuall approval needed"; ls -l tfplan
        working-directory: ./terraform/aws/vpc

    # - name: Apply Terraform
    #   run: terraform apply tfplan
    #   working-directory: ./terraform/aws/vpc